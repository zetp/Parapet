(*
This apple script was written in 2008 as a result of discussion in one of apple user group forums. The idea was to have new functionality concerning window size which was lacking in the Finder. The idea was to have each Finder window (and each newly opened window) to have predefined size chosen by user. However the user should be able to change window size afterwards if he/she chooses to do so.

The script should be saved as app with option to stay open. On launch it will open new window which user can resize to set up the desired size of windows (via "Get window size" button). Then when "Start" button is pressed the script will work in the background. It will set all open Finder window sizes to desired size as well as any new window. But it will do it only once for each window so user can still resize it if she/he desires.
*)property lista_okien : {}property lista_okien2 : {}property lista_temp : {}property guzik : ""property loop : 0property wys : 0property szer : 0on run		repeat until loop = 1		try			tell application "Finder"				make new Finder window				set window_ID to id of window 1				set toolbar visible of the window id window_ID to true				set statusbar visible of the window id window_ID to true				set {a, b, c, d} to bounds of window id window_ID				set szerokosc to (c - a)				set wysokosc to (d - b)			end tell			set loop to 1		on error			set loop to 0			delay 0.5		end try	end repeat	set loop to 0			set guzik to "Get window size"	repeat until guzik is not "Get window size"		display dialog "Set widow desired  size
		width: " & szerokosc & " height: " & wysokosc buttons {"Quit", "Get window size", "Start"} with icon note with title "Parapet"		tell result to set guzik to button returned		if guzik is "Get window size" then			try				tell application "Finder"					set {a, b, c, d} to bounds of window id window_ID					set szerokosc to (c - a)					set wysokosc to (d - b)				end tell			on error				display dialog "Hmm... looks like youhave closed the window or Finder is busy" buttons {"Quit"} default button 1 with icon note with title "Parapet"				set guzik to "Quit"			end try		end if	end repeat		if guzik is "Quit" then		quit me -- koniec			else if guzik is "Start" then		try			tell application "Finder"				set {a, b, c, d} to bounds of window id window_ID				set szerokosc to (c - a)				set wysokosc to (d - b)			end tell		on error			display dialog "Hmm... looks like youhave closed the window or Finder is busy" buttons {"Quit"} default button 1 with icon note with title "Parapet"			quit me		end try		set wys to wysokosc		set szer to szerokosc				--===pierwszy i ostatni raz===--		repeat until loop = 1			try				tell application "Finder"					set lista_okien to id of every window				end tell				set loop to 1			on error				set loop to 0				delay 0.5			end try		end repeat		set loop to 0				repeat until loop = 1			try				tell application "Finder"					repeat with i in lista_okien						set {a, b, c, d} to get bounds of window id i						if (c - a) = szer and (d - b) = wys then						else							set c to (c + (szer - (c - a)))							set d to (d + (wys - (d - b)))							set the bounds of window id (i as integer) to {a as integer, b as integer, c as integer, d as integer}						end if					end repeat				end tell				set loop to 1			on error				set loop to 0				delay 0.5			end try		end repeat		set loop to 0	end if	--===/pierwszy i ostatni raz===--end runon idle	-- ===p´tla=== --	repeat until loop = 1		try			tell application "Finder"				set lista_okien2 to id of every window			end tell			set loop to 1		on error			set loop to 0			delay 0.5		end try	end repeat	set loop to 0		if lista_okien = lista_okien2 then -- jeÊli listy sà takie same nie rób nic		-- nic	else		repeat until loop = 1			try				tell application "Finder"					repeat with i in lista_okien2						if not (i is in lista_okien) then -- porównanie nowa lista do starej							-- jeÊli nie ma 							set the end of lista_okien to (i as integer) -- to dodaç je do lista_okien							set {a, b, c, d} to get bounds of window id i -- i je dopasowaç do wymiarów							if (c - a) = szer and (d - b) = wys then -- jeÊli wymiary sà dobre robiç nic								-- nic							else								set c to (c + (szer - (c - a)))								set d to (d + (wys - (d - b)))								set the bounds of window id (i as integer) to {a as integer, b as integer, c as integer, d as integer}							end if						else -- jeÊli jest							-- nic						end if					end repeat				end tell				set loop to 1			on error				set loop to 0				delay 0.5			end try		end repeat		set loop to 0		----		repeat with i in lista_okien			if (i is in lista_okien2) then -- porownanie stara lista do nowej				set the end of lista_temp to (i as integer) -- jeÊli jest zbudowaç list´ temp				end if		end repeat		set lista_okien to lista_temp		set lista_temp to {}	end if	return 1end idle-- ===/p´tla=== --on quit	continue quitend quit